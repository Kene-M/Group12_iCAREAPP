@model Group12_iCAREAPP.Models.Document

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/WorkerLayout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Documents", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Document</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- Document ID -->
    <div class="form-group">
        @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Document Name -->
    <div class="form-group">
        @Html.LabelFor(model => model.docName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.docName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.docName, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Document File Upload -->
    <div class="form-group">
        <label class="control-label col-md-2" for="docData">Upload Document</label>
        <div class="col-md-10">
            <input type="file" name="docData" class="form-control" />
            @Html.ValidationMessage("docData", "Please upload a file.", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Document Type -->
    <div class="form-group">
        @Html.LabelFor(model => model.docType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.DropDownListFor(model => model.docType, (SelectList)ViewBag.DocTypeOptions, new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.docType,
        new SelectList(new List<string> { "document", "image" }),
        new { @class = "form-control" })
            @*@Html.DropDownList("DocTypeOptions", null, htmlAttributes: new { @class = "form-control" }) *@
            @Html.ValidationMessageFor(model => model.docType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dateOfCreation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dateOfCreation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dateOfCreation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @* @Html.LabelFor(model => model.drugUsedID, "drugUsedID", htmlAttributes: new { @class = "control-label col-md-2" }) *@
        @Html.LabelFor(model => model.drugUsedID, "Drug Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("drugUsedID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.drugUsedID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.patientID, "patientID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("patientID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.patientID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.treatmentDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.treatmentDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.treatmentDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.prescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.prescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.prescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.workerID, "workerID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("workerID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.workerID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}